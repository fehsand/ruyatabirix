            # ----Tüm kutucukların doldurulması sağlanacak yoksa hata verecek---
            if len (isim) < 1 or len (soy_isim) < 1 or len (eposta) < 1 or len (eposta1) < 1 or len (
                    cinsiyet) < 1 or len (ruya_zamani) < 1 or len (bilinc_alti) < 1 or len (ruya) < 1:
                mesaj = _ ('Kutucukları Doldurunuz.')
                form = RTXYorumForm ()
                return render (response, 'ruyatabirleri/ruyatabirleri_yorum.html', {'mesaj': mesaj, 'form': form,
                                                                                    'place_holder_isim': place_holder_isim,
                                                                                    'place_holder_soyisim': place_holder_soyisim,
                                                                                    'place_holder_ornek': place_holder_ornek,
                                                                                    'place_holder_ornek1': place_holder_ornek1,
                                                                                    'place_holder_ruya': place_holder_ruya})
            else:
                pass
            # --------------------kutu Kontrolü bitti----------------

<link rel="shortcut icon" type="image/png" href="{% static 'images/favicon.ico' %}" />

dream meanings, islamic dream meanings,  islamic dream interpretations, dreams fortune teller, fortune teller,
horoscopes, aries, taurus, gemini, cancer, leo, virgo, libra, scorpio, sagittarius, capricorn, aquarius, pisces,

        body { padding-top: 5rem;}
        .carousel {  margin-bottom: 2rem; }
        .carousel-caption {   bottom: 3rem;   z-index: 20; }
        .carousel-item {   height: 40rem;   background-color: #777;}
        .carousel-item > img {   position: absolute;   top: 0;   left: 0;   min-width: 100%;   height: 40rem; }


                <h1>Этот раздел находится в стадии разработки.</h1>
                <h1>Пожалуйста, зайдите в ближайшее время.</h1>
                <h1>Спасибо за ваш интерес.</h1>

                <h1>Esta sección aún está en construcción.</h1>
                <h1>Por favor, revise luego.</h1>
                <h1>Gracias por tu interés.</h1>

        {% get_current_language as LANGUAGE_CODE %}
        {% if LANGUAGE_CODE == 'en' %}
        {% elif LANGUAGE_CODE == 'en' %}
        {% else LANGUAGE_CODE == 'en' %}
        {% endif %}


Github güncelleme:
git status
git add --all .
git status
git commit -m "Gelistirme."
git push

Run makemessages:
django-admin makemessages -l en
django-admin makemessages -l ar
django-admin makemessages -l es
django-admin makemessages -l ru
django-admin makemessages -l zh_Hans



Run compilemessages:
django-admin compilemessages
-------------------------------------------
python manage.py makemessages -l zh_Hans
python manage.py compilemessages




#---------------------MODEL Güncelleme-----------------
py manage.py makemigrations ruyatabirleri
py manage.py migrate ruyatabirleri



#------------------------------------------------
from ruyatabirleri.models import Ruyatabirleri

from django.contrib.sitemaps.views import sitemap
from django.contrib.sitemaps import GenericSitemap

from ruyatabirleri.sitemaps import StaticViewSitemap

sitemaps = {
    'ruyatabirleri': GenericSitemap({
        'queryset': Ruyatabirleri.objects.all(),
        'date_field': 'updated',
    }, priority=0.9, changefreq = "weekly"),
    'static': StaticViewSitemap,
}
#path ('sitemap.xml/', sitemap, {'sitemaps': sitemaps}, name='django.contrib.sitemaps.views.sitemap'),
#sitemap
from django.contrib.sitemaps import Sitemap
from django.urls import reverse

class StaticViewSitemap(Sitemap):
    changefreq = "weekly"
    priority = 0.9
    i18n = True
    def items(self):
        return ['ruyatabirleri:anasayfa',
                'ruyatabirleri:dua',
                'ruyatabirleri:dua_nedir',
                'ruyatabirleri:yasin',
                'ruyatabirleri:mubin',
                'ruyatabirleri:yasin_arapca',
                'ruyatabirleri:ayetelkursi',
                'ruyatabirleri:ayetelkursi_arapca',
                'ruyatabirleri:dua_ayet',
                'ruyatabirleri:esmaul_husna',
                'ruyatabirleri:tefriciye',
                'ruyatabirleri:tefriciye_arapca',
                'ruyatabirleri:tefeul',
                'ruyatabirleri:tefeul_nedir',
                'ruyatabirleri:iletisim',
                'ruyatabirleri:gizlilik',
                'ruyatabirleri:yildizname',
                'ruyatabirleri:yildizname_nedir',
                'ruyatabirleri:ruyatabirleri',
                'ruyatabirleri:ruyatabirleri_nedir',
                ]
    def location(self, item):
        return reverse(item)


#-----------------------------------------------------

Bu bölümde, rüyanızda gördüğünüz olayların anlamlarını anahtar kelimeler kullanarak bulabilirsiniz.
Örneğin rüyanızda araba kullandığınızı gördünüz zaman, sadece ARABA kelimesini kullanarak arama yapmalısınız.
In this section, you can find the meanings of the events you see in your dream using keywords.
For example, when you see that you are driving in your dream, you should search using only the word CAR.

Bu bölümde kendinizin ve annenizin ismini yazarak burcunuz hakkındaki bilgileri okuyabilirsiniz.
In this section, you can read the information about your horoscope by writing the name of yourself and your mother.



<img class="first-slide w-100" src="/static/logo_marka_2.png" height="600" alt="First slide">

src="{% static 'images/logo_marka_2.png' %}"

<a class="btn btn-outline-dark" href="{% url 'register:login' %}?next={{request.path}}">Giriş Yap</a>

style="background-color: gray; background-image: linear-gradient(to right, gray, white,gray);"


#href="http://ruyatabirix.pythonanywhere.com/sitemap.xml/"

# SECURITY WARNING: keep the secret key used in production secret!
with open('/home/ruyatabirix/sc_ky.txt') as f:
    SECRET_KEY = f.read().strip()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ruyatabirix$ruyatabirix',
        'USER': 'ruyatabirix',
        'PASSWORD': 'Rfvtgb123+',
        'HOST': 'ruyatabirix.mysql.pythonanywhere-services.com',
    }
}

SITE_ID = 2

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ruyatabirix',
        'USER': 'root',
        'PASSWORD': 'Tgbyhn123+',
        'HOST': '',
        'PORT': '',
    }
}


10.07.2020


    #----------Çince------
    elif get_language() == 'zh-hans':
        print (get_language (), 'çince olmalı')
        place_holder_1 = _('Aramak İstediğin Kelimeyi Yaz')
        if response.method == "POST":
            form = AramaForm(response.POST)
            if form.is_valid():
                n = form.cleaned_data["kelime"]
                #n = n1.lower()   girilen kelime küçük harflere dönüştürüldü
                # ------------Karakter Kontrolü yapıldı. Uygun olmayan varsa hata verildi.-------------
                #harfler = 'abcdefghijklmnñopqrstuvwxy z'
                #for harf in n:
                #    if not harf in harfler:
                #        mesaj = ' : Por favor, use solo letras del alfabeto español.'
                #        return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                #                      {'n1': n1, 'mesaj': mesaj, 'place_holder_1': place_holder_1})
                #    else:
                #        pass
                # --------------------Karakter Kontrolü bitti----------------
                ArananKelimeler.objects.create(kelime=n)  # aranan kelime kontrollerden sonra db kaydedildi.
                # -----------Aranan kelimenin tabiri db den alında yoksa hata verip en yakın tabir verildi---------
                tabir1 = Ruyatabirlerix.objects.filter(kelime_ch__contains=n)
                if tabir1:
                    return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                                  {'tabir1': tabir1, 'place_holder_1': place_holder_1})  # tabir var
                else:
                    # --birden fazla kelime girilmiş ise tabiri de yoksa kelimeleri parçalayarak en yakın anlamaı bulma----
                    kelimlere_ayir = n.split(" ")
                    tabir_listesi = []
                    kelimlere_ayir2 = [i for i in kelimlere_ayir if i != 'sueño' if i != 'soñado']
                    for klm in kelimlere_ayir2:
                        tabir1 = Ruyatabirlerix.objects.filter(kelime_ch__contains=klm)
                        if not tabir1:
                            s = 0
                            while not tabir1:
                                k = len(klm)
                                s += 1
                                k1 = k - s
                                klm1 = klm[:k1]
                                tabir1 = Ruyatabirlerix.objects.filter(kelime_ch__contains=klm1)
                            for i in tabir1:
                                tabir_listesi += [i]
                        else:
                            for i in tabir1:
                                tabir_listesi += [i]
                    tabir1 = tabir_listesi
                    mesaj = "不幸的是，找不到您想要的梦中解释。 下面列出了其他有关梦的解释。"
                    return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                                  {'mesaj': mesaj, 'tabir1': tabir1, 'place_holder_1': place_holder_1})
            else:
                pass
            form = AramaForm()
            mesaj = "请写任何关键字。"
            return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                          {'mesaj': mesaj, 'form': form, 'place_holder_1': place_holder_1})
        else:
            form = AramaForm()
            return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html', {'form': form, 'place_holder_1': place_holder_1})
    # ---------------Arapça----------------------
    if get_language() == 'ar':
        print (get_language (), 'arapça olmalı')
        place_holder_1 = _('Aramak İstediğin Kelimeyi Yaz')
        if response.method == "POST":
            form = AramaForm(response.POST)
            if form.is_valid():
                n = form.cleaned_data["kelime"]
                # ------------Karakter Kontrolü yapıldı. Uygun olmayan varsa hata verildi.-------------
                harfler = 'ذ د ج ح خ ه ع  غ ف ق ث ص ض ط ك م ن ت ا ل ب ي س ش ظ ز و ة ى لا ر ؤ ء ئ  إ أ آ لإ لأ لآلا'
                for harf in n:
                    if not harf in harfler:
                        mesaj = '  من فضلك ، استخدم الحروف العربية فقط.'
                        return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                                      {'n': n, 'mesaj': mesaj, 'place_holder_1': place_holder_1})
                    else:
                        pass
                # --------------------Karakter Kontrolü bitti----------------
                ArananKelimeler.objects.create(kelime=n)  # aranan kelime kontrollerden sonra db kaydedildi.
                # -----------Aranan kelimenin tabiri db den alında yoksa hata verip en yakın tabir verildi---------
                tabir1 = Ruyatabirlerix.objects.filter(kelime_ar2__contains=n)
                if tabir1:
                    return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                                  {'tabir1': tabir1, 'place_holder_1': place_holder_1})  # tabir var
                else:
                    # --birden fazla kelime girilmiş ise tabiri de yoksa kelimeleri parçalayarak en yakın anlamaı bulma----
                    kelimlere_ayir = n.split(" ")
                    tabir_listesi = []
                    kelimlere_ayir2 = [i for i in kelimlere_ayir if i != 'dream' if i != 'dreamt'
                                       if i != 'seeing' if i != 'i' if i != 'my' if i != 'have']
                    for klm in kelimlere_ayir2:
                        tabir1 = Ruyatabirlerix.objects.filter(kelime_ar2__contains=klm)
                        if not tabir1:
                            s = 0
                            while not tabir1:
                                k = len(klm)
                                s += 1
                                k1 = k - s
                                klm1 = klm[:k1]
                                tabir1 = Ruyatabirlerix.objects.filter(kelime_ar2__contains=klm1)
                            for i in tabir1:
                                tabir_listesi += [i]
                        else:
                            for i in tabir1:
                                tabir_listesi += [i]
                    tabir1 = tabir_listesi
                    mesaj = "لسوء الحظ ، لم يتم العثور على تفسير الأحلام الذي تبحث عنه. تم سرد تفسيرات الحلم الأخرى ذات الصلة أدناه."
                    return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                                  {'mesaj': mesaj, 'tabir1': tabir1, 'place_holder_1': place_holder_1})
            else:
                pass
            form = AramaForm()
            mesaj = "من فضلك ، اكتب أي كلمات رئيسية."
            return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html',
                          {'mesaj': mesaj, 'form': form, 'place_holder_1': place_holder_1})
        else:
            form = AramaForm()
            return render(response, 'ruyatabirleri/ruyatabirleri_anasayfa.html', {'form': form, 'place_holder_1': place_holder_1})

Ayrıntı


    elif get_language() == 'zh-hans':
        tabir1 = get_object_or_404(Ruyatabirlerix, kelime_ch=slug)
        karakter_satiri = int(len(tabir1.tabiri) / 100)
        sayac = 0
        for i in tabir1.tabiri:
            if i == "\n":
                sayac += 1
        if len(tabir1.tabiri) > 100:
            satir = (sayac + karakter_satiri)
        else:
            satir = (sayac + 2)
        object_pk = tabir1.id
        form = AramaForm()
        return render(response, 'ruyatabirleri/ruyatabirleri_ayrinti.html',
                      {'satir': satir, 'tabir1': tabir1, 'form': form, 'object_pk': object_pk, 'place_holder_1': place_holder_1})


    elif get_language() == 'ar':
        print(slug)
        tabir1 = get_object_or_404(Ruyatabirlerix, kelime_ar2=slug)
        print(tabir1)
        karakter_satiri = int(len (tabir1.tabiri) / 100)
        sayac = 0
        for i in tabir1.tabiri:
            if i == "\n":
                sayac += 1
        if len(tabir1.tabiri) > 100:
            satir = (sayac + karakter_satiri)
        else:
            satir = (sayac + 2)
        object_pk = tabir1.id
        form = AramaForm()
        return render(response, 'ruyatabirleri/ruyatabirleri_ayrinti.html',
                      {'satir': satir, 'tabir1': tabir1, 'form': form, 'object_pk': object_pk,
                       'place_holder_1': place_holder_1})


x = 'Hello World!'
for i in x:
    x = x[::-1]